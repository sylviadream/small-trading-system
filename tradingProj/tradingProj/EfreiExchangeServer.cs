// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: efrei_exchange_server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Efrei.ExchangeServer {

  /// <summary>Holder for reflection information generated from efrei_exchange_server.proto</summary>
  public static partial class EfreiExchangeServerReflection {

    #region Descriptor
    /// <summary>File descriptor for efrei_exchange_server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EfreiExchangeServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtlZnJlaV9leGNoYW5nZV9zZXJ2ZXIucHJvdG8SFWVmcmVpLmV4Y2hhbmdl",
            "X3NlcnZlciIGCgRWb2lkImEKDE5ld1ByaWNlQXJncxIVCg1pbnN0cnVtZW50",
            "X2lkGAEgASgFEgsKA2JpZBgCIAEoDRIPCgdiaWRfcXR5GAMgASgNEgsKA2Fz",
            "axgEIAEoDRIPCgdhc2tfcXR5GAUgASgNIi8KDVN1YnNjcmliZUFyZ3MSDAoE",
            "bmFtZRgBIAEoCRIQCghlbmRwb2ludBgCIAEoCSI3ChFTdWJzY3JpYmVSZXNw",
            "b25zZRIRCgljbGllbnRfaWQYASABKAMSDwoHZXJyX21zZxgCIAEoCSJVCg1T",
            "ZW5kT3JkZXJBcmdzEhUKDWluc3RydW1lbnRfaWQYASABKAUSDQoFcHJpY2UY",
            "AiABKAQSCwoDcXR5GAMgASgFEhEKCWNsaWVudF9pZBgEIAEoBCI2ChFTZW5k",
            "T3JkZXJSZXNwb25zZRIQCghvcmRlcl9pZBgBIAEoBBIPCgdlcnJfbXNnGAIg",
            "ASgJIiIKBERlYWwSCwoDcXR5GAEgASgFEg0KBXByaWNlGAIgASgEIpcBCg1P",
            "cmRlckV2ZW50QXJnEhAKCG9yZGVyX2lkGAEgASgEEhUKDWluc3RydW1lbnRf",
            "aWQYAiABKAUSKQoEZGVhbBgDIAEoCzIbLmVmcmVpLmV4Y2hhbmdlX3NlcnZl",
            "ci5EZWFsEjIKBnN0YXR1cxgEIAEoDjIiLmVmcmVpLmV4Y2hhbmdlX3NlcnZl",
            "ci5PcmRlclN0YXR1cyJ+ChZQb3J0Zm9saW9TaW5nbGVQcm9kdWN0EhAKCG9w",
            "ZW5fcXR5GAEgASgDEgsKA3BubBgCIAEoAxIUCgxleGVjdXRlZF9xdHkYAyAB",
            "KAQSLwoKb3Blbl9kZWFscxgEIAMoCzIbLmVmcmVpLmV4Y2hhbmdlX3NlcnZl",
            "ci5EZWFsIk4KCVBvcnRmb2xpbxJBCgpwb3J0Zm9saW9zGAEgAygLMi0uZWZy",
            "ZWkuZXhjaGFuZ2Vfc2VydmVyLlBvcnRmb2xpb1NpbmdsZVByb2R1Y3QqQwoL",
            "T3JkZXJTdGF0dXMSDAoIZXhlY3V0ZWQQABISCg5kZWxldGVkX2FzX2ZvaxAB",
            "EhIKDmRlbGV0ZWRfYXNfaW9jEAIylQIKDkV4Y2hhbmdlRW5naW5lEl0KCVN1",
            "YnNjcmliZRIkLmVmcmVpLmV4Y2hhbmdlX3NlcnZlci5TdWJzY3JpYmVBcmdz",
            "GiguZWZyZWkuZXhjaGFuZ2Vfc2VydmVyLlN1YnNjcmliZVJlc3BvbnNlIgAS",
            "XQoJU2VuZE9yZGVyEiQuZWZyZWkuZXhjaGFuZ2Vfc2VydmVyLlNlbmRPcmRl",
            "ckFyZ3MaKC5lZnJlaS5leGNoYW5nZV9zZXJ2ZXIuU2VuZE9yZGVyUmVzcG9u",
            "c2UiABJFCgdQaW5nU3J2EhsuZWZyZWkuZXhjaGFuZ2Vfc2VydmVyLlZvaWQa",
            "Gy5lZnJlaS5leGNoYW5nZV9zZXJ2ZXIuVm9pZCIAMvcBCg5FeGNoYW5nZUNs",
            "aWVudBJOCghOZXdQcmljZRIjLmVmcmVpLmV4Y2hhbmdlX3NlcnZlci5OZXdQ",
            "cmljZUFyZ3MaGy5lZnJlaS5leGNoYW5nZV9zZXJ2ZXIuVm9pZCIAElEKCk9y",
            "ZGVyRXZlbnQSJC5lZnJlaS5leGNoYW5nZV9zZXJ2ZXIuT3JkZXJFdmVudEFy",
            "ZxobLmVmcmVpLmV4Y2hhbmdlX3NlcnZlci5Wb2lkIgASQgoEUGluZxIbLmVm",
            "cmVpLmV4Y2hhbmdlX3NlcnZlci5Wb2lkGhsuZWZyZWkuZXhjaGFuZ2Vfc2Vy",
            "dmVyLlZvaWQiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Efrei.ExchangeServer.OrderStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.Void), global::Efrei.ExchangeServer.Void.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.NewPriceArgs), global::Efrei.ExchangeServer.NewPriceArgs.Parser, new[]{ "InstrumentId", "Bid", "BidQty", "Ask", "AskQty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.SubscribeArgs), global::Efrei.ExchangeServer.SubscribeArgs.Parser, new[]{ "Name", "Endpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.SubscribeResponse), global::Efrei.ExchangeServer.SubscribeResponse.Parser, new[]{ "ClientId", "ErrMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.SendOrderArgs), global::Efrei.ExchangeServer.SendOrderArgs.Parser, new[]{ "InstrumentId", "Price", "Qty", "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.SendOrderResponse), global::Efrei.ExchangeServer.SendOrderResponse.Parser, new[]{ "OrderId", "ErrMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.Deal), global::Efrei.ExchangeServer.Deal.Parser, new[]{ "Qty", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.OrderEventArg), global::Efrei.ExchangeServer.OrderEventArg.Parser, new[]{ "OrderId", "InstrumentId", "Deal", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.PortfolioSingleProduct), global::Efrei.ExchangeServer.PortfolioSingleProduct.Parser, new[]{ "OpenQty", "Pnl", "ExecutedQty", "OpenDeals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Efrei.ExchangeServer.Portfolio), global::Efrei.ExchangeServer.Portfolio.Parser, new[]{ "Portfolios" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OrderStatus {
    [pbr::OriginalName("executed")] Executed = 0,
    [pbr::OriginalName("deleted_as_fok")] DeletedAsFok = 1,
    [pbr::OriginalName("deleted_as_ioc")] DeletedAsIoc = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Void : pb::IMessage<Void> {
    private static readonly pb::MessageParser<Void> _parser = new pb::MessageParser<Void>(() => new Void());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Void> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void(Void other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Void Clone() {
      return new Void(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Void);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Void other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Void other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NewPriceArgs : pb::IMessage<NewPriceArgs> {
    private static readonly pb::MessageParser<NewPriceArgs> _parser = new pb::MessageParser<NewPriceArgs>(() => new NewPriceArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPriceArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPriceArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPriceArgs(NewPriceArgs other) : this() {
      instrumentId_ = other.instrumentId_;
      bid_ = other.bid_;
      bidQty_ = other.bidQty_;
      ask_ = other.ask_;
      askQty_ = other.askQty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPriceArgs Clone() {
      return new NewPriceArgs(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    /// <summary>
    /// 0 or 1 (we are working with 2 instruments only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 2;
    private uint bid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bid {
      get { return bid_; }
      set {
        bid_ = value;
      }
    }

    /// <summary>Field number for the "bid_qty" field.</summary>
    public const int BidQtyFieldNumber = 3;
    private uint bidQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BidQty {
      get { return bidQty_; }
      set {
        bidQty_ = value;
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 4;
    private uint ask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ask {
      get { return ask_; }
      set {
        ask_ = value;
      }
    }

    /// <summary>Field number for the "ask_qty" field.</summary>
    public const int AskQtyFieldNumber = 5;
    private uint askQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AskQty {
      get { return askQty_; }
      set {
        askQty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewPriceArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPriceArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (Bid != other.Bid) return false;
      if (BidQty != other.BidQty) return false;
      if (Ask != other.Ask) return false;
      if (AskQty != other.AskQty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (Bid != 0) hash ^= Bid.GetHashCode();
      if (BidQty != 0) hash ^= BidQty.GetHashCode();
      if (Ask != 0) hash ^= Ask.GetHashCode();
      if (AskQty != 0) hash ^= AskQty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (Bid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Bid);
      }
      if (BidQty != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BidQty);
      }
      if (Ask != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Ask);
      }
      if (AskQty != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(AskQty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (Bid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bid);
      }
      if (BidQty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BidQty);
      }
      if (Ask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ask);
      }
      if (AskQty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AskQty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPriceArgs other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.Bid != 0) {
        Bid = other.Bid;
      }
      if (other.BidQty != 0) {
        BidQty = other.BidQty;
      }
      if (other.Ask != 0) {
        Ask = other.Ask;
      }
      if (other.AskQty != 0) {
        AskQty = other.AskQty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 16: {
            Bid = input.ReadUInt32();
            break;
          }
          case 24: {
            BidQty = input.ReadUInt32();
            break;
          }
          case 32: {
            Ask = input.ReadUInt32();
            break;
          }
          case 40: {
            AskQty = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeArgs : pb::IMessage<SubscribeArgs> {
    private static readonly pb::MessageParser<SubscribeArgs> _parser = new pb::MessageParser<SubscribeArgs>(() => new SubscribeArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeArgs(SubscribeArgs other) : this() {
      name_ = other.name_;
      endpoint_ = other.endpoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeArgs Clone() {
      return new SubscribeArgs(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// your team name (or whatever)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 2;
    private string endpoint_ = "";
    /// <summary>
    /// YOUR ExchangeClient server , form : a.b.c.d:port
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Endpoint != other.Endpoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Endpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeArgs other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Endpoint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeResponse : pb::IMessage<SubscribeResponse> {
    private static readonly pb::MessageParser<SubscribeResponse> _parser = new pb::MessageParser<SubscribeResponse>(() => new SubscribeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse(SubscribeResponse other) : this() {
      clientId_ = other.clientId_;
      errMsg_ = other.errMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse Clone() {
      return new SubscribeResponse(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private long clientId_;
    /// <summary>
    /// negative if error, else your id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "err_msg" field.</summary>
    public const int ErrMsgFieldNumber = 2;
    private string errMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrMsg {
      get { return errMsg_; }
      set {
        errMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (ErrMsg != other.ErrMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0L) hash ^= ClientId.GetHashCode();
      if (ErrMsg.Length != 0) hash ^= ErrMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientId);
      }
      if (ErrMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientId);
      }
      if (ErrMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeResponse other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0L) {
        ClientId = other.ClientId;
      }
      if (other.ErrMsg.Length != 0) {
        ErrMsg = other.ErrMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt64();
            break;
          }
          case 18: {
            ErrMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendOrderArgs : pb::IMessage<SendOrderArgs> {
    private static readonly pb::MessageParser<SendOrderArgs> _parser = new pb::MessageParser<SendOrderArgs>(() => new SendOrderArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendOrderArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderArgs(SendOrderArgs other) : this() {
      instrumentId_ = other.instrumentId_;
      price_ = other.price_;
      qty_ = other.qty_;
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderArgs Clone() {
      return new SendOrderArgs(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private int instrumentId_;
    /// <summary>
    /// 0 or 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private ulong price_;
    /// <summary>
    /// limit price of the IOC order 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "qty" field.</summary>
    public const int QtyFieldNumber = 3;
    private int qty_;
    /// <summary>
    /// sign represents side , ex: +4 => buy 4, -2 => sell 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Qty {
      get { return qty_; }
      set {
        qty_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 4;
    private ulong clientId_;
    /// <summary>
    /// the id sent during subscription
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendOrderArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendOrderArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      if (Price != other.Price) return false;
      if (Qty != other.Qty) return false;
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (Price != 0UL) hash ^= Price.GetHashCode();
      if (Qty != 0) hash ^= Qty.GetHashCode();
      if (ClientId != 0UL) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InstrumentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InstrumentId);
      }
      if (Price != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Price);
      }
      if (Qty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Qty);
      }
      if (ClientId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (Price != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Price);
      }
      if (Qty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
      }
      if (ClientId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendOrderArgs other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.Price != 0UL) {
        Price = other.Price;
      }
      if (other.Qty != 0) {
        Qty = other.Qty;
      }
      if (other.ClientId != 0UL) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 16: {
            Price = input.ReadUInt64();
            break;
          }
          case 24: {
            Qty = input.ReadInt32();
            break;
          }
          case 32: {
            ClientId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendOrderResponse : pb::IMessage<SendOrderResponse> {
    private static readonly pb::MessageParser<SendOrderResponse> _parser = new pb::MessageParser<SendOrderResponse>(() => new SendOrderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderResponse(SendOrderResponse other) : this() {
      orderId_ = other.orderId_;
      errMsg_ = other.errMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendOrderResponse Clone() {
      return new SendOrderResponse(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private ulong orderId_;
    /// <summary>
    /// used to reconciliate in OrderEventArg message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "err_msg" field.</summary>
    public const int ErrMsgFieldNumber = 2;
    private string errMsg_ = "";
    /// <summary>
    /// if not-empty : your order has not been accepted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrMsg {
      get { return errMsg_; }
      set {
        errMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (ErrMsg != other.ErrMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId != 0UL) hash ^= OrderId.GetHashCode();
      if (ErrMsg.Length != 0) hash ^= ErrMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(OrderId);
      }
      if (ErrMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OrderId);
      }
      if (ErrMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.OrderId != 0UL) {
        OrderId = other.OrderId;
      }
      if (other.ErrMsg.Length != 0) {
        ErrMsg = other.ErrMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderId = input.ReadUInt64();
            break;
          }
          case 18: {
            ErrMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Deal : pb::IMessage<Deal> {
    private static readonly pb::MessageParser<Deal> _parser = new pb::MessageParser<Deal>(() => new Deal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Deal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal(Deal other) : this() {
      qty_ = other.qty_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal Clone() {
      return new Deal(this);
    }

    /// <summary>Field number for the "qty" field.</summary>
    public const int QtyFieldNumber = 1;
    private int qty_;
    /// <summary>
    /// sign represents side , ex: +4 => buy 4, -2 => sell 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Qty {
      get { return qty_; }
      set {
        qty_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private ulong price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Deal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Deal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Qty != other.Qty) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Qty != 0) hash ^= Qty.GetHashCode();
      if (Price != 0UL) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Qty != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Qty);
      }
      if (Price != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Qty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
      }
      if (Price != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Deal other) {
      if (other == null) {
        return;
      }
      if (other.Qty != 0) {
        Qty = other.Qty;
      }
      if (other.Price != 0UL) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Qty = input.ReadInt32();
            break;
          }
          case 16: {
            Price = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderEventArg : pb::IMessage<OrderEventArg> {
    private static readonly pb::MessageParser<OrderEventArg> _parser = new pb::MessageParser<OrderEventArg>(() => new OrderEventArg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderEventArg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventArg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventArg(OrderEventArg other) : this() {
      orderId_ = other.orderId_;
      instrumentId_ = other.instrumentId_;
      deal_ = other.deal_ != null ? other.deal_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventArg Clone() {
      return new OrderEventArg(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private ulong orderId_;
    /// <summary>
    /// the id sent in SendOrderResponse message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private int instrumentId_;
    /// <summary>
    /// 0 or 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = value;
      }
    }

    /// <summary>Field number for the "deal" field.</summary>
    public const int DealFieldNumber = 3;
    private global::Efrei.ExchangeServer.Deal deal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Efrei.ExchangeServer.Deal Deal {
      get { return deal_; }
      set {
        deal_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Efrei.ExchangeServer.OrderStatus status_ = 0;
    /// <summary>
    /// this status indicates the real intent of this message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Efrei.ExchangeServer.OrderStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderEventArg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderEventArg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (InstrumentId != other.InstrumentId) return false;
      if (!object.Equals(Deal, other.Deal)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId != 0UL) hash ^= OrderId.GetHashCode();
      if (InstrumentId != 0) hash ^= InstrumentId.GetHashCode();
      if (deal_ != null) hash ^= Deal.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(OrderId);
      }
      if (InstrumentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InstrumentId);
      }
      if (deal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Deal);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OrderId);
      }
      if (InstrumentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstrumentId);
      }
      if (deal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deal);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderEventArg other) {
      if (other == null) {
        return;
      }
      if (other.OrderId != 0UL) {
        OrderId = other.OrderId;
      }
      if (other.InstrumentId != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.deal_ != null) {
        if (deal_ == null) {
          deal_ = new global::Efrei.ExchangeServer.Deal();
        }
        Deal.MergeFrom(other.Deal);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderId = input.ReadUInt64();
            break;
          }
          case 16: {
            InstrumentId = input.ReadInt32();
            break;
          }
          case 26: {
            if (deal_ == null) {
              deal_ = new global::Efrei.ExchangeServer.Deal();
            }
            input.ReadMessage(deal_);
            break;
          }
          case 32: {
            status_ = (global::Efrei.ExchangeServer.OrderStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// this 2 messages can be used to deserialize the report published on the web page
  /// </summary>
  public sealed partial class PortfolioSingleProduct : pb::IMessage<PortfolioSingleProduct> {
    private static readonly pb::MessageParser<PortfolioSingleProduct> _parser = new pb::MessageParser<PortfolioSingleProduct>(() => new PortfolioSingleProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PortfolioSingleProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortfolioSingleProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortfolioSingleProduct(PortfolioSingleProduct other) : this() {
      openQty_ = other.openQty_;
      pnl_ = other.pnl_;
      executedQty_ = other.executedQty_;
      openDeals_ = other.openDeals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortfolioSingleProduct Clone() {
      return new PortfolioSingleProduct(this);
    }

    /// <summary>Field number for the "open_qty" field.</summary>
    public const int OpenQtyFieldNumber = 1;
    private long openQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OpenQty {
      get { return openQty_; }
      set {
        openQty_ = value;
      }
    }

    /// <summary>Field number for the "pnl" field.</summary>
    public const int PnlFieldNumber = 2;
    private long pnl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Pnl {
      get { return pnl_; }
      set {
        pnl_ = value;
      }
    }

    /// <summary>Field number for the "executed_qty" field.</summary>
    public const int ExecutedQtyFieldNumber = 3;
    private ulong executedQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExecutedQty {
      get { return executedQty_; }
      set {
        executedQty_ = value;
      }
    }

    /// <summary>Field number for the "open_deals" field.</summary>
    public const int OpenDealsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Efrei.ExchangeServer.Deal> _repeated_openDeals_codec
        = pb::FieldCodec.ForMessage(34, global::Efrei.ExchangeServer.Deal.Parser);
    private readonly pbc::RepeatedField<global::Efrei.ExchangeServer.Deal> openDeals_ = new pbc::RepeatedField<global::Efrei.ExchangeServer.Deal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Efrei.ExchangeServer.Deal> OpenDeals {
      get { return openDeals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PortfolioSingleProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PortfolioSingleProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenQty != other.OpenQty) return false;
      if (Pnl != other.Pnl) return false;
      if (ExecutedQty != other.ExecutedQty) return false;
      if(!openDeals_.Equals(other.openDeals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenQty != 0L) hash ^= OpenQty.GetHashCode();
      if (Pnl != 0L) hash ^= Pnl.GetHashCode();
      if (ExecutedQty != 0UL) hash ^= ExecutedQty.GetHashCode();
      hash ^= openDeals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OpenQty != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OpenQty);
      }
      if (Pnl != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Pnl);
      }
      if (ExecutedQty != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ExecutedQty);
      }
      openDeals_.WriteTo(output, _repeated_openDeals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenQty != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OpenQty);
      }
      if (Pnl != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Pnl);
      }
      if (ExecutedQty != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExecutedQty);
      }
      size += openDeals_.CalculateSize(_repeated_openDeals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PortfolioSingleProduct other) {
      if (other == null) {
        return;
      }
      if (other.OpenQty != 0L) {
        OpenQty = other.OpenQty;
      }
      if (other.Pnl != 0L) {
        Pnl = other.Pnl;
      }
      if (other.ExecutedQty != 0UL) {
        ExecutedQty = other.ExecutedQty;
      }
      openDeals_.Add(other.openDeals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OpenQty = input.ReadInt64();
            break;
          }
          case 16: {
            Pnl = input.ReadInt64();
            break;
          }
          case 24: {
            ExecutedQty = input.ReadUInt64();
            break;
          }
          case 34: {
            openDeals_.AddEntriesFrom(input, _repeated_openDeals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Portfolio : pb::IMessage<Portfolio> {
    private static readonly pb::MessageParser<Portfolio> _parser = new pb::MessageParser<Portfolio>(() => new Portfolio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Portfolio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Efrei.ExchangeServer.EfreiExchangeServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Portfolio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Portfolio(Portfolio other) : this() {
      portfolios_ = other.portfolios_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Portfolio Clone() {
      return new Portfolio(this);
    }

    /// <summary>Field number for the "portfolios" field.</summary>
    public const int PortfoliosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Efrei.ExchangeServer.PortfolioSingleProduct> _repeated_portfolios_codec
        = pb::FieldCodec.ForMessage(10, global::Efrei.ExchangeServer.PortfolioSingleProduct.Parser);
    private readonly pbc::RepeatedField<global::Efrei.ExchangeServer.PortfolioSingleProduct> portfolios_ = new pbc::RepeatedField<global::Efrei.ExchangeServer.PortfolioSingleProduct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Efrei.ExchangeServer.PortfolioSingleProduct> Portfolios {
      get { return portfolios_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Portfolio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Portfolio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!portfolios_.Equals(other.portfolios_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= portfolios_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      portfolios_.WriteTo(output, _repeated_portfolios_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += portfolios_.CalculateSize(_repeated_portfolios_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Portfolio other) {
      if (other == null) {
        return;
      }
      portfolios_.Add(other.portfolios_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            portfolios_.AddEntriesFrom(input, _repeated_portfolios_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
